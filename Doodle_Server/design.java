/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Doodle_Server;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.geom.Line2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Stack;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JPanel;

/**
 *
 * @author Abrar-ThInK_PaD
 */
public class design extends javax.swing.JFrame {

   static ServerSocket ss;
   static Socket s;
   public int var;
   static MyThread thread;
           
    public design() {
        
        initComponents();
         thread = new MyThread();
         thread.setDaemon(true);
         thread.start();
         ObjectInputStream fin = null ;
          try {
               fin = new ObjectInputStream(new FileInputStream("Server_Lineinfo.txt"));
            
            } catch (Exception ex) {
                //Logger.getLogger(design.class.getName()).log(Level.SEVERE, null, ex);
            }
          Graphics g = canvas.getGraphics();
          while(true){
                 
                 try{ 
                     
                  Line l =  (Line)fin.readObject();    
                  thread.list.add(l);
                  //  g.setColor(jchooser.getColor());
                   g.setColor(new Color(l.r,l.g,l.b));  
                  Graphics2D g2 = (Graphics2D) g;
                    g2.setStroke(new BasicStroke(l.strokesize));
                    g2.draw(new Line2D.Float(l.start_x,l.start_y,l.end_x,l.end_y));
                 }
                 catch(Exception e)
                 {
                  break;   
                 }
                  
              }       
          
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        canvas = new java.awt.Canvas();
        jchooser = new javax.swing.JColorChooser();
        SaveButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        chatBox = new java.awt.TextArea();
        chatSend = new java.awt.TextField();
        SendButton = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        SizeSlider = new javax.swing.JSlider();
        SizeLabel = new javax.swing.JLabel("    Size : 0");
        ClearButton = new javax.swing.JButton();
        ChatClearButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Doodle Messenger Server");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        setSize(new java.awt.Dimension(920, 600));

        canvas.setBackground(new java.awt.Color(255, 255, 255));
        canvas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                canvasMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                canvasMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                canvasMouseReleased(evt);
            }
        });
        canvas.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                canvasComponentShown(evt);
            }
        });
        canvas.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                canvasMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                canvasMouseMoved(evt);
            }
        });

        jchooser.setPreviewPanel(new JPanel());
        jchooser.setColor(new java.awt.Color(0, 0, 0));
        jchooser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        SaveButton.setText("Save");
        SaveButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        chatBox.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        chatBox.setEditable(false);

        chatSend.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        chatSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chatSendActionPerformed(evt);
            }
        });
        chatSend.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                chatSendKeyPressed(evt);
            }
        });

        SendButton.setText("Send ");
        SendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendButtonActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(153, 153, 153));
        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jTextField1.setText("         Chat");
        jTextField1.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(SendButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(9, 9, 9))
                    .addComponent(chatBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chatSend, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chatBox, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chatSend, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        SizeSlider.setMajorTickSpacing(5);
        SizeSlider.setMaximum(20);
        SizeSlider.setMinorTickSpacing(1);
        SizeSlider.setPaintTicks(true);
        SizeSlider.setValue(0);
        SizeSlider.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SizeSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SizeSliderStateChanged(evt);
            }
        });

        ClearButton.setText("Clear");
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        ChatClearButton.setText("ClearChat");
        ChatClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChatClearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(canvas, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jchooser, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(SizeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(SizeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SaveButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChatClearButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClearButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(SizeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SizeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(SaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ChatClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jchooser, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(canvas, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        canvas.getAccessibleContext().setAccessibleDescription("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
int px=0,py=0;
 boolean press = false;
boolean f = false,rubber = false;

static Com p;
 boolean rel = false; 
   static ObjectInputStream in,cin;
    static ObjectOutputStream ou,cou;
  Color c;
    private void canvasMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canvasMouseDragged
        Graphics g = canvas.getGraphics();
        
      
           
        //Graphics g = canvas.getGraphics();
        
      
     press  = false;
        if(f==true&& rubber==false) {
         int value = SizeSlider.getValue();
         g.setColor(jchooser.getColor());
         Graphics2D g2 = (Graphics2D) g;
         g2.setStroke(new BasicStroke(value));
         g2.draw(new Line2D.Float(px, py, evt.getX(), evt.getY())); 
      
   
        Line line = new Line();  
        line.start_x = px;
        line.start_y = py;
        line.end_x=evt.getX();
        line.end_y=evt.getY();
        line.strokesize = value;
        line.r = jchooser.getColor().getRed();
        line.g = jchooser.getColor().getGreen();
        line.b = jchooser.getColor().getBlue();
               
        
        thread.list.add(line);  
         //new_code_end   
        
        p.x = evt.getX();
        p.y = evt.getY();
        p.f = press;
        p.r = jchooser.getColor().getRed();
        p.g = jchooser.getColor().getGreen();
        p.b = jchooser.getColor().getBlue();
        p.msg = chatSend.getText();
        p.send_flag = false;
        p.sendstrokesize = SizeSlider.getValue();
           try {
               p.writeObject(ou);
           } 
           catch(Exception e)
           {
               
           }
          
         
        px = evt.getX();
        py = evt.getY(); 
        
        }    
       
    }//GEN-LAST:event_canvasMouseDragged
  
    private void canvasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canvasMouseClicked
      
 
    }//GEN-LAST:event_canvasMouseClicked
   
    private void canvasMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canvasMouseReleased
        f = false; 
       Graphics g = canvas.getGraphics();
       thread.rubber_flag = false;
      press = false;
        
    }//GEN-LAST:event_canvasMouseReleased
   
    private void canvasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canvasMousePressed
       
        
        
       press = true;
        px = evt.getX();
        py = evt.getY();
        f = true;
        
        
        Graphics g = canvas.getGraphics();
        
        
         
        
        
        int value = SizeSlider.getValue();
         g.setColor(jchooser.getColor());
         Graphics2D g2 = (Graphics2D) g;
         g2.setStroke(new BasicStroke(value));
         g2.draw(new Line2D.Float(px, py, evt.getX(), evt.getY())); 
        
         //g.drawImage(img, 0, 0, canvas.getWidth(), canvas.getHeight(), null);
         
         //new_code_start
        Line line = new Line();  
        line.start_x = px;
        line.start_y = py;
        line.end_x= px;
        line.end_y=py;
        
        line.r = jchooser.getColor().getRed();
        line.g = jchooser.getColor().getGreen();
        line.b = jchooser.getColor().getBlue();
        line.strokesize = value;
        thread.list.add(line);  
         //new_code_end   
        
        p.x = evt.getX();
        p.y = evt.getY();
        p.f = press;
        p.r = jchooser.getColor().getRed();
        p.g = jchooser.getColor().getGreen();
        p.b = jchooser.getColor().getBlue();
        p.sendstrokesize = SizeSlider.getValue();
        p.msg = chatSend.getText();
        p.send_flag = false;
        
           try {
               p.writeObject(ou);
           } catch (Exception ex) {
               
           }
           
    }//GEN-LAST:event_canvasMousePressed
 


    
    private void canvasComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_canvasComponentShown
       
    }//GEN-LAST:event_canvasComponentShown
  int prex,prey;
  
    private void canvasMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canvasMouseMoved
        // TODO add your handling code here:
        
       
       
    }//GEN-LAST:event_canvasMouseMoved

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
    
       try {
           ObjectOutputStream fou = new ObjectOutputStream(new FileOutputStream("Server_Lineinfo.txt"));
           for(Line l : thread.list) 
           {
               fou.writeObject(l);
               
           }
           
           
       } catch (Exception ex) {
           Logger.getLogger(design.class.getName()).log(Level.SEVERE, null, ex);
       }
        
    }//GEN-LAST:event_SaveButtonActionPerformed

    private void SendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendButtonActionPerformed
      
           //cou.writeObject(chatSend.getText());
        String s = chatSend.getText();
      try{
        char c = s.charAt(0);
      }
      catch(StringIndexOutOfBoundsException e){
          return;
      }
         p.x =0;
        p.y = 0;
        p.f = false;
        p.r = jchooser.getColor().getRed();
        p.g = jchooser.getColor().getGreen();
        p.b = jchooser.getColor().getBlue();
        p.msg = chatSend.getText();
        p.send_flag = true;
        p.sendstrokesize = 0;
           try {
               p.writeObject(ou);
              chatBox.append("Server: ");
              chatBox.append(chatSend.getText());
              chatBox.append("\n"); 
              chatSend.setText(null);
               
           } 
           catch(Exception e)
           {
               
           }
           
          
         
    }//GEN-LAST:event_SendButtonActionPerformed

    private void chatSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chatSendActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_chatSendActionPerformed

    private void chatSendKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chatSendKeyPressed
      if(  evt.getKeyChar()=='\n' ) 
      {   
          
          java.awt.event.ActionEvent evt1 = null;
          SendButtonActionPerformed(evt1);
          
          }
      
      
    }//GEN-LAST:event_chatSendKeyPressed

    private void SizeSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SizeSliderStateChanged
        // TODO add your handling code here:
        
        int value = SizeSlider.getValue();
      //  String add = Integer.toString(value);
        System.out.println(value);
        SizeLabel.setText("    Size : "+value );
        //String check = SizeLabel.getText();
      //  System.out.println(value);
    }//GEN-LAST:event_SizeSliderStateChanged

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        // TODO add your handling code here:
        canvas.repaint();
        thread.list.clear();
    }//GEN-LAST:event_ClearButtonActionPerformed

    private void ChatClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChatClearButtonActionPerformed
        // TODO add your handling code here:
        chatBox.setText(null);
    }//GEN-LAST:event_ChatClearButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(design.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(design.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(design.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(design.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
      
           
            
         
        /* Create and display the form */ 
        java.awt.EventQueue.invokeLater(new Runnable() {
           
            public void run() {
                
                  try{
                    
                    Thread.sleep(4500);
                }
                catch(Exception e){
                    
                }
                
                new design().setVisible(true);
              
            }
        });
        
        
        try
        {
          ss = new ServerSocket(500);
          s = ss.accept();
          
          ou = new ObjectOutputStream(s.getOutputStream());
          in = new ObjectInputStream(s.getInputStream());
          
          //cou = new ObjectOutputStream(s.getOutputStream());
          //cin = new ObjectInputStream(s.getInputStream());
          //p.readObject(in);
          //int ppx = p.x,ppy = p.y;
         
          p = new Com(); 
          int i = 0 , j = 0;
           int ppx=0,ppy=0;
          while(true)
          {
              
            p.readObject(in);
            
             if(p.send_flag)  
          {
             // chatBox.setText(p.msg); 
              chatBox.append("Client: ");
              chatBox.append(p.msg);
              chatBox.append("\n");
          }
             else 
             {
            
            
            if(p.f==true)
            {
             ppx = p.x;
             ppy = p.y;
            }
            Graphics g = canvas.getGraphics();
             
             g.setColor(new Color(p.r,p.g,p.b));
         Graphics2D g2 = (Graphics2D) g;
         g2.setStroke(new BasicStroke(p.sendstrokesize));
         g2.draw(new Line2D.Float(ppx,ppy,p.x,p.y)); 
            
        Line line = new Line();  
        line.start_x = ppx;
        line.start_y = ppy;
        line.end_x= p.x;
        line.end_y=p.y;
        line.strokesize = p.sendstrokesize;
        line.r = p.r;
        line.g = p.g;
        line.b = p.b;
        
        thread.list.add(line);  
           
           ppx = p.x;
           ppy = p.y;
          }
          }
        }
        catch(Exception e)
        {
            
        }
        
      
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ChatClearButton;
    private javax.swing.JButton ClearButton;
    private javax.swing.JButton SaveButton;
    private javax.swing.JButton SendButton;
    private javax.swing.JLabel SizeLabel;
    private javax.swing.JSlider SizeSlider;
    public static java.awt.Canvas canvas;
    private static java.awt.TextArea chatBox;
    private java.awt.TextField chatSend;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JColorChooser jchooser;
    // End of variables declaration//GEN-END:variables
}
